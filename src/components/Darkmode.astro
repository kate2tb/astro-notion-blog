---
---

<div class="mode-wrap">
    <input type="checkbox" id="mode-toggle" tabindex="0" />
    <label for="mode-toggle"><span></span></label>
  </div>
  
  <style is:global>
  /* --------------------
  layout.astro
  -------------------- */
  :root.darkmode {
    --bg: #313338 !important;
    --fg: #DCDEE1 !important;
    --accents-1: #05A8FC !important;
    --accents-2: #05A8FC !important;
    --accents-3: #a5a5a5 !important;
  }
  .darkmode header h1 {
    color: #DCDEE1 !important;
  }
  
  .darkmode aside {
    background: #2B2D31 !important;
    color: var(--fg) !important;
  }
  
  .darkmode a:hover {
    background: #1E1F22 !important;
  }

  /* --------------------
  pages/index.astro
  -------------------- */
  .darkmode .read-more-link a {
    color: var(--fg) !important;
  }
  /* --------------------
  posts/[slug].astro
  -------------------- */
  .darkmode .content h1 {
    color: var(--fg) !important;
  }
  
  /* --------------------
  NoContents.astro
  -------------------- */
  .darkmode .no-contents {
    color: var(--accents-3) !important;
  }
  
  /* --------------------
  Pagination.astro
  -------------------- */
  .darkmode .pagination a{
    background: #333 !important;
  }
  .darkmode .pagination a:hover:not(.inactive) {
    background: #555 !important;
  }
  .darkmode .pagination a.inactive {
    color: #f7f7f7 !important;
    background: #444 !important;
  }
  /* --------------------
  Bookmark.astro
  -------------------- */
  .darkmode .bookmark {
    background: #2B2D31 !important;
  }
  
  /* --------------------
  BulletedListItems.astro
  -------------------- */
  .darkmode li {
    color: var(--fg);
  }
  
  /* --------------------
  Callout.astro
  -------------------- */
/* --------------------
  .darkmode .callout.gray-background {
    background: #252525 !important;
  }
  -------------------- */
  /* --------------------
  Code.astro
  -------------------- */
  .darkmode .code pre {
    background: #272727 !important;
  }
  .darkmode .code pre code {
    color: var(--fg);
    background: #272727 !important;
  }
  .darkmode code {
    background: #2F2F2D !important;
  }
  
  .darkmode .code > div {
    background: #272727 !important;
  }
  
  .darkmode .code button.copy {
background-color: rgba(227,226,224,0.2) !important;
  }
  
  /* --------------------
  Caption.astro
  -------------------- */
  .darkmode .caption {
    background: var(--bg) !important;
  }
  
  /* --------------------
  Paragraph.astro
  -------------------- */
  .darkmode p {
    color: var(--fg);
  }
  
  /* --------------------
  SyncedBlock.astro
  -------------------- */
    /* --------------------
  .darkmode .callout.blue-background {
    background: #1D282E !important;
  }
    -------------------- */
  /* --------------------
  Table.astro
  -------------------- */
  .darkmode table {
    color: var(--fg) !important;
  }
  .darkmode table th {
    background: #272727 !important;
    border-color: #272727 !important;
  }
  .darkmode table td {
    border-color: #272727 !important;
  }
  
  /* --------------------
  TableOfContents.astro
  -------------------- */
  .darkmode .table-of-contents > a {
    color: #DCDEE1 !important;
  }
  .darkmode .table-of-contents > a:hover {
    background: rgba(30,31,34, 0.5) !important;
  }
  
  /* --------------------
  ToDo.astro
  -------------------- */
  .darkmode .to-do {
    color: var(--fg) !important;
  }
  
  /* --------------------
  PostRelativeLink.astro
  -------------------- */
  .darkmode div.post-relative-link > div > a.colored  {
    background: rgba(30, 31, 34, 0.5) !important;
  }
  
  /* --------------------
  notion-color.css
 -------------------- */
  .darkmode .tag.default {
    background: #373737 !important;
    color: #f7f7f7;
  }
  .darkmode .tag.gray,
  .darkmode .gray-background {
    background: rgba(227, 226, 224, 0.5) !important;
  }
  .darkmode .tag.brown,
  .darkmode .brown-background {
    background: rgb(238, 224, 218) !important;
  }
  .darkmode .tag.orange,
  .darkmode .orange-background {
    background: rgb(250, 222, 201) !important;
  }
  .darkmode .tag.yellow,
  .darkmode .yellow-background {
    background: rgb(253, 236, 200) !important;
  }
  .darkmode .tag.green,
  .darkmode .green-background {
    background: rgb(219, 237, 219) !important;
  }
  .darkmode .tag.blue,
  .darkmode .blue-background {
    background: rgb(211, 229, 239) !important;
  }
  .darkmode .tag.purple,
  .darkmode .purple-background {
    background: rgb(232, 222, 238) !important;
  }
  .darkmode .tag.pink,
  .darkmode .pink-background {
    background: rgb(245, 224, 233) !important;
  }
  .darkmode .tag.red,
  .darkmode .red-background {
    background: rgb(255, 226, 221) !important;
  }
    .darkmode .gray-background {
        color: rgb(28, 56, 41);
  background: rgba(241, 241, 239, 1) !important;
}
.darkmode .brown-background {
    color: rgb(28, 56, 41);
  background: rgba(244, 238, 238, 1) !important;
}
.darkmode .orange-background {
    color: rgb(28, 56, 41);
  background: rgba(251, 236, 221, 1) !important;
}
.darkmode .yellow-background {
    color: rgb(28, 56, 41);
  background: rgba(251, 243, 219, 1) !important;
}
.darkmode .green-background {
    color: rgb(28, 56, 41);
  background: rgba(237, 243, 236, 1) !important;
}
.darkmode .blue-background {
    color: rgb(28, 56, 41);
  background: rgba(231, 243, 248, 1) !important;
}
.darkmode .purple-background {
    color: rgb(28, 56, 41);
  background: rgba(244, 240, 247, 0.8) !important;
}
.darkmode .pink-background {
    color: rgb(28, 56, 41);
  background: rgba(249, 238, 243, 0.8) !important;
}
.darkmode .red-background {
    color: rgb(28, 56, 41);
  background: rgba(253, 235, 236, 1) !important;
}
/*
SearchButton.astro
*/
.darkmode .search-button {
    color: #949BA4 !important;
  }
.darkmode .search-button:hover {
    cursor: pointer;
    background-color: #1E1F22 !important;
  }
/*
BlogPostsLink.astro
*/
.darkmode .blog-posts-link h2 {
    color: #949BA4 !important;
  }
/*
BlogTagsLink.astro
*/
.darkmode .blog-tags-link h2 {
    color: #949BA4 !important;
  }
  /* --------------------
  ダークモードトグル
  -------------------- */
  .mode-wrap {
    display:flex;
    margin-block-end: 1rem;
  }
  
  .mode-wrap #mode-toggle {
    display: none;
  }
  
  .mode-wrap #mode-toggle + label {
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display : inline-flex;
    align-items: center;
    font-size: 1rem;
    height: 1.6em;
    width: 2.4em;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    border-radius: calc(2em / 2);
    background: #fff;
    -webkit-transition: 0.2s;  transition: 0.2s;
    border: 2px solid var(--accents-1);
    overflow: hidden;
    cursor: pointer;
    -webkit-tap-highlight-color: rgba(0,0,0,0);
  }
  
  .mode-wrap #mode-toggle + label span {
    background: var(--accents-1);
    border-radius: 50%;
    height: 1.8em;
    width: 1.8em;
    -webkit-transform: translateX(-0.125em) scale(0.65);
    transform: translateX(-0.125em) scale(0.65);
    -webkit-transition: 0.2s;
    transition: 0.2s;
    cursor: pointer;
  }
  
  .mode-wrap #mode-toggle:checked + label {
    border-color: var(--bg);
    background: var(--accents-1);
  }
  
  .mode-wrap #mode-toggle:checked + label span {
    background: var(--bg);
    -webkit-transform: translateX(calc(100% - 1.25em)) scale(0.65);
    transform: translateX(calc(100% - 1.25em)) scale(0.65);
  }
  
  .darkmode .mode-wrap #mode-toggle + label {
    border-color: var(--accents-1);
  }
  </style>
  
  <script is:inline>
  /* --------------------
  ダークモード切り替え
  -------------------- */
  // OS設定を反映
  const osDark = window.matchMedia("(prefers-color-scheme: dark)");
  // トグル処理
  const modeToggle = document.getElementById("mode-toggle");
  function darkModeOn() {
    document.documentElement.classList.add("darkmode");
    modeToggle.checked = true;
  }
  
  function darkModeOff() {
    document.documentElement.classList.remove("darkmode");
    modeToggle.checked = false;
  }
  
  const listener = (event) => {
    if (event.matches) {
      darkModeOn();
    } else {
      darkModeOff();
    }
  };
  
  osDark.addEventListener("change", listener);
  listener(osDark);
  
  modeToggle.addEventListener("change", () => {
    if (modeToggle.checked) {
      darkModeOn();
      style = "dark";
    } else {
      darkModeOff();
      style = "light";
    }
    localStorage.setItem("mode", style);
  });
  // モード設定をロード
  if (localStorage.getItem("mode") === "dark") {
    darkModeOn();
  } else if (localStorage.getItem("mode") === "light") {
    darkModeOff();
  }
  </script>